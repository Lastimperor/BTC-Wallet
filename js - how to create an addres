https://medium.com/blockthought/creating-bitcoin-wallets-in-js-69c0773c2954

1) Private key
2) Public key
3) Public key hash
4) Public addres

const secureRandom = require('secure-random');
const elliptic = require('elliptic');
const ecdsa = new elliptic.ec('secp256k1');
const sha256 = require('js-sha256');
const ripemd160 = require('ripemd160');

var foundPrivateKey = False;
var privateKey;
while(!foundPrivateKey){

  privateKey = secureRandom.randomBuffer(32);
  if (Buffer.compare(Max, PrivateKey) == 1) {
    foundPrivateKey == True;
  }
}

console.log("PRIVATE KEY: " + privateKey.toString("hex"));

var keys = ecdsa.keyFromPrivate(privateKey);
var publicKey = keys.getPublic("hex");

console.log("PUBLIC KEY: " + publicKey);

const hashBeforePKH = sha256(Buffer.from(publicKey, 'hex'));
const publicKeyHash = new ripemd160().update(Buffer.from(hashBeforePKH, 'hex')).digest();

console.log("PUBLIC KEY HASH: " + publicKeyHash.toString("hex"));




